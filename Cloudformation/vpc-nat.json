{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Example VPC Cloud Formation Template",
    "Parameters": {
        "CIDRBLOCK": {
            "Description": "CIDR Block for VPC",
            "Type": "String",
            "Default": "10.0.0.0/16",
            "AllowedValues": [
                "10.0.0.0/16",
                "10.1.0.0/16"
            ],
            "ConstraintDescription": "must be valid CIDR block which is part of our network plan"
        },
        "PubSubnet1": {
            "Description": "Public Subnet 1",
            "Type": "String",
            "Default": "10.0.0.0/24",
            "AllowedValues": [
                "10.0.0.0/24",
                "10.0.1.0/24",
                "10.0.2.0/24",
                "10.0.3.0/24",
                "10.0.4.0/24",
                "10.1.0.0/24",
                "10.1.1.0/24",
                "10.1.2.0/24",
                "10.1.3.0/24",
                "10.1.4.0/24"
            ],
            "ConstraintDescription": "must be valid subnet within our CIDR block which is part of our network plan"
        },
        "PubSubnet2": {
            "Description": "Public Subnet 2",
            "Type": "String",
            "Default": "10.0.1.0/24",
            "AllowedValues": [
                "10.0.0.0/24",
                "10.0.1.0/24",
                "10.0.2.0/24",
                "10.0.3.0/24",
                "10.0.4.0/24",
                "10.1.0.0/24",
                "10.1.1.0/24",
                "10.1.2.0/24",
                "10.1.3.0/24",
                "10.1.4.0/24"
            ],
            "ConstraintDescription": "must be valid subnet within our CIDR block which is part of our network plan"
        },
        "PrvSubnet1": {
            "Description": "Private Subnet 1",
            "Type": "String",
            "Default": "10.0.100.0/24",
            "AllowedValues": [
                "10.0.100.0/24",
                "10.0.101.0/24",
                "10.0.102.0/24",
                "10.0.103.0/24",
                "10.0.104.0/24",
                "10.1.100.0/24",
                "10.1.101.0/24",
                "10.1.102.0/24",
                "10.1.103.0/24",
                "10.1.104.0/24"
            ],
            "ConstraintDescription": "must be valid subnet within our CIDR block which is part of our network plan"
        },
        "PrvSubnet2": {
            "Description": "Private Subnet 2",
            "Type": "String",
            "Default": "10.0.101.0/24",
            "AllowedValues": [
                "10.0.100.0/24",
                "10.0.101.0/24",
                "10.0.102.0/24",
                "10.0.103.0/24",
                "10.0.104.0/24",
                "10.1.100.0/24",
                "10.1.101.0/24",
                "10.1.102.0/24",
                "10.1.103.0/24",
                "10.1.104.0/24"
            ],
            "ConstraintDescription": "must be valid subnet within our CIDR block which is part of our network plan"
        }
    },
    "Mappings": {
        "AMAZONLINUXAMI": {
            "us-east-1": {
                "AMI": "ami-ed8e9284"
            },
            "us-west-2": {
                "AMI": "ami-363a5006"
            },
            "us-west-1": {
                "AMI": "ami-6cba8329"
            },
            "eu-west-1": {
                "AMI": "ami-0318e374"
            },
            "ap-southeast-1": {
                "AMI": "ami-4e0c5f1c"
            },
            "ap-southeast-2": {
                "AMI": "ami-094bd333"
            },
            "ap-northeast-1": {
                "AMI": "ami-c1562fc0"
            },
            "sa-east-1": {
                "AMI": "ami-4d5dff50"
            }
        }
    },
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "CIDRBLOCK"
                },
                "Tags": [
                    {
                        "Key": "VPC",
                        "Value": "SampleTemplate-Bootstrapping"
                    },
                    {
                        "Key": "Network",
                        "Value": "Public-and-Private"
                    }
                ]
            }
        },
        "PublicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "PubSubnet1"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Network",
                        "Value": "Public"
                    }
                ]
            }
        },
        "PublicSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "PubSubnet2"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "1",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Network",
                        "Value": "Public"
                    }
                ]
            }
        },
        "PrivateSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "PrvSubnet1"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Network",
                        "Value": "Private"
                    }
                ]
            }
        },
        "PrivateSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "PrvSubnet2"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "1",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Network",
                        "Value": "Private"
                    }
                ]
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Network",
                        "Value": "Public"
                    }
                ]
            }
        },
        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Network",
                        "Value": "Public"
                    }
                ]
            }
        },
        "PublicRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "PublicSubnet1RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            }
        },
        "PublicSubnet2RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet2"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            }
        },
        "PrivateRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Network",
                        "Value": "Private"
                    }
                ]
            }
        },
        "PrivateSubnet1RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet1"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                }
            }
        },
        "PrivateSubnet2RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet2"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                }
            }
        },
        "PrivateNetworkAcl": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Network",
                        "Value": "Private"
                    }
                ]
            }
        },
 
        "NATInstance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AMAZONLINUXAMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "InstanceType": "m1.small",
                "NetworkInterfaces": [
                    {
                        "DeviceIndex": "0",
                        "AssociatePublicIpAddress": "true",
                        "SubnetId": { "Ref": "PublicSubnet1" },
                        "GroupSet": [{ "Ref": "NATSecurityGroup" }]
                    }
                ],
                "SourceDestCheck": "false",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "NAT Instance"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "\n",
                            [
                                "#!/bin/bash",
                                "yum -y update",
                                "echo 1 > /proc/sys/net/ipv4/ip_forward",
                                "echo 0 > /proc/sys/net/ipv4/conf/eth0/send_redirects",
                                "/sbin/iptables -t nat -A POSTROUTING -o eth0 -s 0.0.0.0/0 -j MASQUERADE",
                                "/sbin/iptables-save > /etc/sysconfig/iptables",
                                "mkdir -p /etc/sysctl.d/",
                                "cat <<EOF > /etc/sysctl.d/nat.conf",
                                "net.ipv4.ip_forward = 1",
                                "net.ipv4.conf.eth0.send_redirects = 0",
                                "EOF \n"
                            ]
                        ]
                    }
                }
            }
        },
        "NATSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable internal access to the NAT device",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": {
                            "Ref": "PrvSubnet1"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": {
                            "Ref": "PrvSubnet1"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": {
                            "Ref": "PrvSubnet2"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": {
                            "Ref": "PrvSubnet2"
                        }
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "PrivateRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "InstanceId": {
                    "Ref": "NATInstance"
                }
            }
        }
    }
}
